{"ast":null,"code":"var _jsxFileName = \"/workspace/MERNstack/los_cunados/client/src/components/ContactSectionDup/index.js\";\nimport React, { useState } from 'react';\nimport { Button } from '../ButtonElement';\nimport { ContactContainer, ContactWrapper, ContactRow, ContactFormContainer, ContactFormRow, ContactFormRowItem, Column1, Column2, TextWrapper, TopLine, Heading, Subtitle, BtnWrap, ImgWrap, Img, ContactMessageContainer, SpinnerBorder, LoadingMessage, Form, FormLabel, FormInput } from './ContactElements';\n\nconst Contact = ({\n  lightBg,\n  id,\n  imgStart,\n  topLine,\n  lightText,\n  headLine,\n  darkText,\n  description,\n  buttonLabel,\n  img,\n  alt,\n  primary,\n  dark,\n  dark2\n}) => {\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [messageSent, setMessageSent] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    message: \"\"\n  });\n  const {\n    name,\n    email,\n    message\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    setSendingMessage(true);\n    let templateParams = {\n      name: name,\n      email: email,\n      message: message\n    };\n    console.log(\"formData from contact \", formData); // var service_id = 'gmail';\n    // var template_id = 'resume_form';\n    // var user_id = 'user_ziUA20aQdVmniRSrsE8jQ';\n    // emailjs.send(service_id, template_id, templateParams, user_id);\n\n    setFormData({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n    setTimeout(() => {\n      setTimeout(() => {\n        // console.log(\"send a message****\")\n        setSendingMessage(false);\n        setMessageSent(false);\n      }, 2000);\n      setMessageSent(true); // console.log(\"message sent*****\")\n    }, 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ContactContainer, {\n    lightBg: lightBg,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ContactWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ContactRow, {\n    imgStart: imgStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Column1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TopLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, topLine), /*#__PURE__*/React.createElement(Heading, {\n    lightText: lightText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, headLine), /*#__PURE__*/React.createElement(Subtitle, {\n    darkText: darkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, description))), /*#__PURE__*/React.createElement(Column2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, sendingMessage && !messageSent ? /*#__PURE__*/React.createElement(ContactMessageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SpinnerBorder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(LoadingMessage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Loading...\"))) : messageSent ? /*#__PURE__*/React.createElement(ContactMessageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }\n  }, \"Message Sent!\"))) : /*#__PURE__*/React.createElement(ContactFormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 10\n    }\n  }, \"Form will go here\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"fullname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    id: \"fullname\",\n    name: \"name\",\n    placeholder: \"Your Name\",\n    value: name,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormLabel, {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(FormTextArea, {\n    id: \"message\",\n    name: \"message\",\n    value: message,\n    onChange: e => onChange(e),\n    placeholder: \"Say something\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }))))))));\n};\n\nexport default Contact;","map":{"version":3,"sources":["/workspace/MERNstack/los_cunados/client/src/components/ContactSectionDup/index.js"],"names":["React","useState","Button","ContactContainer","ContactWrapper","ContactRow","ContactFormContainer","ContactFormRow","ContactFormRowItem","Column1","Column2","TextWrapper","TopLine","Heading","Subtitle","BtnWrap","ImgWrap","Img","ContactMessageContainer","SpinnerBorder","LoadingMessage","Form","FormLabel","FormInput","Contact","lightBg","id","imgStart","topLine","lightText","headLine","darkText","description","buttonLabel","img","alt","primary","dark","dark2","sendingMessage","setSendingMessage","messageSent","setMessageSent","formData","setFormData","name","email","message","onChange","e","target","value","onSubmit","preventDefault","templateParams","console","log","setTimeout"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SACCC,gBADD,EAECC,cAFD,EAGCC,UAHD,EAICC,oBAJD,EAKCC,cALD,EAMCC,kBAND,EAOCC,OAPD,EAQCC,OARD,EASCC,WATD,EAUCC,OAVD,EAWCC,OAXD,EAYCC,QAZD,EAaCC,OAbD,EAcCC,OAdD,EAeCC,GAfD,EAgBCC,uBAhBD,EAiBCC,aAjBD,EAkBCC,cAlBD,EAmBCC,IAnBD,EAoBCC,SApBD,EAqBCC,SArBD,QAsBO,mBAtBP;;AAwBA,MAAMC,OAAO,GAAG,CAAC;AAChBC,EAAAA,OADgB;AAEhBC,EAAAA,EAFgB;AAGhBC,EAAAA,QAHgB;AAIhBC,EAAAA,OAJgB;AAKhBC,EAAAA,SALgB;AAMhBC,EAAAA,QANgB;AAOhBC,EAAAA,QAPgB;AAQhBC,EAAAA,WARgB;AAShBC,EAAAA,WATgB;AAUhBC,EAAAA,GAVgB;AAWhBC,EAAAA,GAXgB;AAYhBC,EAAAA,OAZgB;AAahBC,EAAAA,IAbgB;AAchBC,EAAAA;AAdgB,CAAD,KAeX;AACJ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCvC,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACwC,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC0C,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC;AACxC4C,IAAAA,IAAI,EAAE,EADkC;AAExCC,IAAAA,KAAK,EAAE,EAFiC;AAGxCC,IAAAA,OAAO,EAAE;AAH+B,GAAD,CAAxC;AAMA,QAAM;AACLF,IAAAA,IADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA;AAHK,MAIFJ,QAJJ;;AAMA,QAAMK,QAAQ,GAAGC,CAAC,IACjBL,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,KAACM,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAAxC,GAAD,CADZ;;AAGA,QAAMC,QAAQ,GAAGH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AAEAb,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AAEA,QAAIc,cAAc,GAAG;AACpBT,MAAAA,IAAI,EAAEA,IADc;AAEpBC,MAAAA,KAAK,EAAEA,KAFa;AAGpBC,MAAAA,OAAO,EAAEA;AAHW,KAArB;AAKCQ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCb,QAAtC,EAVoB,CAWrB;AACA;AACA;AAEA;;AAEAC,IAAAA,WAAW,CAAC;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAD,CAAX;AAMAU,IAAAA,UAAU,CAAC,MAAI;AACdA,MAAAA,UAAU,CAAC,MAAI;AACd;AACAjB,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAE,QAAAA,cAAc,CAAC,KAAD,CAAd;AACA,OAJS,EAIP,IAJO,CAAV;AAKAA,MAAAA,cAAc,CAAC,IAAD,CAAd,CANc,CAOd;AACA,KARS,EAQP,IARO,CAAV;AASA,GAhCD;;AAkCA,sBACC,uDACC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEjB,OAA3B;AAAoC,IAAA,EAAE,EAAEC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUC,OAAV,CADD,eAEC,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,QAAhC,CAFD,eAGC,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BC,WAA/B,CAHD,CADD,CADD,eASC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEO,cAAc,IAAI,CAACE,WAAnB,gBACA,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CADD,CADA,GAYAA,WAAW,gBACV,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,CADD,CADU,gBAQX,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADD,eAEC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,EAAE,EAAC,UAFJ;AAGC,IAAA,IAAI,EAAC,MAHN;AAIC,IAAA,WAAW,EAAC,WAJb;AAKC,IAAA,KAAK,EAAEI,IALR;AAMC,IAAA,QAAQ,EAAEI,CAAC,IAAID,QAAQ,CAACC,CAAD,CANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAaC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbD,eAgBC,oBAAC,SAAD;AACC,IAAA,IAAI,EAAC,OADN;AAEC,IAAA,EAAE,EAAC,OAFJ;AAGC,IAAA,IAAI,EAAC,OAHN;AAIC,IAAA,KAAK,EAAEH,KAJR;AAKC,IAAA,QAAQ,EAAEG,CAAC,IAAID,QAAQ,CAACC,CAAD,CALxB;AAMC,IAAA,WAAW,EAAC,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,eAyBC,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAzBD,eA6BC,oBAAC,YAAD;AACC,IAAA,EAAE,EAAC,SADJ;AAEC,IAAA,IAAI,EAAC,SAFN;AAGC,IAAA,KAAK,EAAEF,OAHR;AAIC,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAJxB;AAKC,IAAA,WAAW,EAAC,eALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BD,CAFD,CArBF,CATD,CADD,CADD,CADD,CADD;AAoFA,CAvJD;;AAyJA,eAAezB,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport {Button} from '../ButtonElement';\nimport { \n\tContactContainer,\n\tContactWrapper,\n\tContactRow,\n\tContactFormContainer,\n\tContactFormRow,\n\tContactFormRowItem,\n\tColumn1,\n\tColumn2,\n\tTextWrapper,\n\tTopLine,\n\tHeading,\n\tSubtitle,\n\tBtnWrap,\n\tImgWrap,\n\tImg,\n\tContactMessageContainer,\n\tSpinnerBorder,\n\tLoadingMessage,\n\tForm,\n\tFormLabel,\n\tFormInput\n} from './ContactElements';\n\nconst Contact = ({\n\tlightBg,\n\tid,\n\timgStart,\n\ttopLine,\n\tlightText,\n\theadLine,\n\tdarkText,\n\tdescription,\n\tbuttonLabel,\n\timg,\n\talt,\n\tprimary,\n\tdark,\n\tdark2\n}) =>{\n\tconst [sendingMessage, setSendingMessage] = useState(false);\n\tconst [messageSent, setMessageSent] = useState(false);\n\tconst [formData, setFormData] = useState({\n\t\tname: \"\",\n\t\temail: \"\",\n\t\tmessage: \"\"\n\t});\n\t\n\tconst {\n\t\tname,\n\t\temail,\n\t\tmessage\n\t} = formData;\n\t\n\tconst onChange = e =>\n\t\tsetFormData({...formData, [e.target.name]: e.target.value});\n\t\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t\t\n\t\tsetSendingMessage(true);\n\t\t\n\t\tlet templateParams = {\n\t\t\tname: name,\n\t\t\temail: email,\n\t\t\tmessage: message\t\n\t\t}\n\t\t\tconsole.log(\"formData from contact \", formData);\n\t\t// var service_id = 'gmail';\n\t\t// var template_id = 'resume_form';\n\t\t// var user_id = 'user_ziUA20aQdVmniRSrsE8jQ';\n\t\t\n\t\t// emailjs.send(service_id, template_id, templateParams, user_id);\n\t\n\t\tsetFormData({\n\t\t\tname: \"\",\n\t\t\temail: \"\",\n\t\t\tmessage: \"\"\n\t\t});\n\t\t\n\t\tsetTimeout(()=>{\n\t\t\tsetTimeout(()=>{\n\t\t\t\t// console.log(\"send a message****\")\n\t\t\t\tsetSendingMessage(false);\n\t\t\t\tsetMessageSent(false);\n\t\t\t}, 2000);\n\t\t\tsetMessageSent(true);\n\t\t\t// console.log(\"message sent*****\")\n\t\t}, 2000);\n\t}\n\t\n\treturn (\n\t\t<>\n\t\t\t<ContactContainer lightBg={lightBg} id={id}>\n\t\t\t\t<ContactWrapper>\n\t\t\t\t\t<ContactRow imgStart={imgStart}>\n\t\t\t\t\t\t<Column1>\n\t\t\t\t\t\t\t<TextWrapper>\n\t\t\t\t\t\t\t\t<TopLine>{topLine}</TopLine>\n\t\t\t\t\t\t\t\t<Heading lightText={lightText}>{headLine}</Heading>\n\t\t\t\t\t\t\t\t<Subtitle darkText={darkText}>{description}</Subtitle>  \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</TextWrapper>\n\t\t\t\t\t\t</Column1>\n\t\t\t\t\t\t<Column2>\n\t\t\t\t\t\t\t{sendingMessage && !messageSent ? (\n\t\t\t\t\t\t\t\t<ContactMessageContainer>\n\t\t\t\t\t\t\t\t\t<SpinnerBorder>\n\t\t\t\t\t\t\t\t\t\t<LoadingMessage>\n\t\t\t\t\t\t\t\t\t\t\tLoading...\n\t\t\t\t\t\t\t\t\t\t</LoadingMessage>\n\t\t\t\t\t\t\t\t\t</SpinnerBorder>\n\t\t\t\t\t\t\t\t</ContactMessageContainer>\n\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t) : (\n\n\t\t\t\t\t\t\t\tmessageSent ? (\n\t\t\t\t\t\t\t\t\t<ContactMessageContainer>\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<h3>Message Sent!</h3>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</ContactMessageContainer>\n\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ContactFormContainer>\n\t\t\t\t\t\t\t\t\t<h1>Form will go here</h1>\n\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"fullname\">\n\t\t\t\t\t\t\t\t\t\t\tName\n\t\t\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<FormInput \n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"fullname\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your Name\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"email\">\n\t\t\t\t\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<FormLabel htmlFor=\"message\">\n\t\t\t\t\t\t\t\t\t\t\tMessage\n\t\t\t\t\t\t\t\t\t\t</FormLabel>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<FormTextArea \n\t\t\t\t\t\t\t\t\t\t\tid=\"message\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"message\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => onChange(e)}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Say something\"\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t</ContactFormContainer>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Column2>\n\t\t\t\t\t</ContactRow>\n\t\t\t\t</ContactWrapper>\n\t\t\t</ContactContainer>\n\t\t</>\n\t)\n}\n\nexport default Contact;"]},"metadata":{},"sourceType":"module"}